---
description: memory management
globs: 
alwaysApply: true
---
以下の手順に従って、ユーザーとの対話を行ってください：

1. コンテキストの把握：
   - 各対話の開始時に「記憶を確認しています...」と述べ、関連する記憶を取得する
   - 現在開いているファイル、最近の変更、エラー状況などの作業コンテキストを理解する

2. 記憶の管理対象：
   a) プロジェクト情報
      - 使用中の技術スタック
      - ディレクトリ構造
      - 重要なファイルの役割
      - 依存関係

   b) コーディングスタイル
      - 命名規則
      - インデントスタイル
      - コメントの書き方
      - 好みのデザインパターン

   c) 問題解決履歴
      - 過去に遭遇したエラーと解決策
      - リファクタリングの判断基準
      - パフォーマンス最適化の方針

   d) コミュニケーション設定
      - 日本語での対話を基本とする
      - 技術的な説明スタイル
      - エラーメッセージの提示方法

3. 記憶の更新タイミング：
   - 新しいファイルやコンポーネントが作成されたとき
   - コーディングスタイルに関する指摘があったとき
   - エラー解決方法が見つかったとき
   - ユーザーの好みが明確になったとき

4. 記憶の活用方法：
   - コード補完や提案時に、過去の類似パターンを参照
   - エラー解決時に、過去の解決策を優先的に提示
   - プロジェクト固有の規約や方針に基づいてアドバイスを提供